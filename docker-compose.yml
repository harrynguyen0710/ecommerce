services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 10

  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    command: ["--replSet", "rs0"]
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: inventory_service  
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10


  product-service:
    build: ./services/products
    container_name: product-service
    command: npx nodemon server.js
    ports:
      - "5001:5001"
    depends_on:
      kafka:
        condition: service_healthy
      mongo:
        condition: service_healthy
    env_file:
      - ./services/products/.env
    volumes:
      - ./services/products:/app
      - /app/node_modules
      - mongo_data:/data/db
      - ./services/products/infra/mongo-init:/docker-entrypoint-initdb.d

  product-outbox-worker:
    build:
      context: ./services/products
    container_name: product-outbox-worker
    command: ["node", "src/jobs/runOutboxWorker.js"]
    depends_on: 
      mongo:
        condition: service_healthy
      kafka:
        condition: service_healthy

    environment:
      - MONGO_URI=mongodb://mongo:27017/product_service?replicaSet=rs0
      - KAFKA_BROKER=kafka:9092

  inventory-consumer:
    build:
      context: ./services/inventories
    container_name: inventory-consumer
    command: node src/app.js
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy 
    env_file:
      - ./services/inventories/.env 

  inventory-service:
    build: ./services/inventories
    container_name: inventory-service
    command: npx nodemon server.js
    ports:
      - "5002:5002"
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    env_file:
      - ./services/inventories/.env 
    volumes:
      - ./services/inventories:/app
      - /app/node_modules

      


volumes:
  mongo_data:
  pgdata:
